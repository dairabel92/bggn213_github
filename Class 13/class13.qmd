---
title: "Class 13 min RNA set"
format: pdf
---


```{r}
library(DESeq2)
```

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names = 1)
head(colData)
```
```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names = 1)
head(countData)
```
> Q. Complete the code below to remove the troublesome first column from countData

```{r}
countData <- countData[,-1]

```


```{r}
colnames(countData)
colData$id
```

>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
to.keep <- rowSums(countData) > 0
counts <- countData[to.keep,]
head(counts)

```

Now we got rid of our stuff
> How many genes should we have left

```{r}
nrow(counts)
```
A: there are 15,975

#PCA AS QUALITY CONTROL

the base r `prcomp` funciton should help with, you also need to scale. `t()`

```{r}
pca <- prcomp(t(counts), scale= TRUE)
summary(pca)
```

>Q How mych variance is captured in the first 2 PCS?

A: BY the first two, about ~82% variance is captured.

>Q. What doies your score pot (PC1 vs PC2 plot) look like hwne coplored by condition (controlv s knockdown)

```{r}
library(ggplot2)

x <- as.data.frame(pca$x)
ggplot(x) +
  aes(PC1, PC2, col=colData$condition) +
  geom_point() 
    
```

```{r}
plot(pca$x[,1], pca$x[,2], pch=16, col=as.factor(colData$condition))
```

#DESeq2 analysis

```{r}
library(DESeq2)
dds = DESeqDataSetFromMatrix(countData=counts,
                             colData=colData,
                             design=~condition)

dds = DESeq(dds)
dds
```
```{r}
dds
```
> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
res = results(dds)
summary(res)
```
#Yay now Volcano Plot!

```{r}
mycols <- rep("gray", nrow(res))
mycols[abs(res$log2FoldChange) >2] <- "blue"
mycols[res$padj > 0.05] <- "red"

##complete this yourself
plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=c(-2,2), lty=2)

```
> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


# add gene annotation

```{r}
library(AnnotationDbi)
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
```
```{r}
res$symbol <- mapIds(org.Hs.eg.db,
                     keys=row.names(counts),
                     keytype="ENSEMBL",
                     column="SYMBOL",
                     multivals="first")
res$entrez <- mapIds(org.Hs.eg.db,
                     keys=row.names(counts),
                     keytype="ENSEMBL",
                     column="ENTREZID",
                     multivals="first")
res$name <- mapIds(org.Hs.eg.db,
                   keys=row.names(res),
                   keytype="ENSEMBL",
                   column="GENENAME",
                   multivals="first")

head(res, 10)
```
> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res,"deseq_results.csv")
```

#Section 2 Pathway anlaysis

```{r}

library(gage)
library(gageData)
library(pathview)

```


```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)

```


```{r}
foldchanges <- res$log2FoldChange
names(foldchanges) <- res$entrez
head(foldchanges)
```

#now lets gage the pathway analsysis

```{r}
keggres <- gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```
```{r}
head(keggres$less)
```

```{r}
pathview(foldchanges, pathway.id = "hsa04110")
```

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

>Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids2 = substr(keggrespathways, start=1, stop=8)
keggresids2
```
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids2, species="hsa")
```

#using Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

#Reactome Analysis!

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```
```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

>Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

A: Based on the results table, the ones that had the most significant are the CNN3 and TENT5C. The factors that cause differences are the types of statistical tests on the data.


